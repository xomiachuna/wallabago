@startuml architecture-components

title Wallabago Components
header component diagram

' Styles
!$Manager = "back:0a2239;text:LightGrey;line:white;line.dotted"
!$Engine = "back:53a2be;text:Black"
!$Storage = "back:1d84b5;text:Black"
!$Persistence = "back:132e32;text:White;line:White"
!$Cache = "back:176087;text:White;line:White"
!$Middleware = "back:105080;text:White;line:White"
!$API = "back:176087;text:White;line:White"

' Clients
actor User [
    User
]

component KOReader [
    KOReader
    ....
    Kindle App
]

component WallabagAndroid [
    Wallabag
    ....
    Android App
]

' API
rectangle HTTPAPI #$API [
    Wallabago HTTP API
    ----
    HTTP handlers
]

rectangle WebUI #$API [
    Wallabago Web UI
    ----
    HTMX Web App
]

' Middleware
process AuthNMiddleware #$Middleware [
    AuthN Middleware
    ----
    Authentication checks for
    protected resources
    ....
    Used before
    every protected Manager
]

' Managers
rectangle AdminManager #$Manager [
    Admin Manager
    ----
    User Management
]

rectangle OAuth2Manager #$Manager [
    OAuth2 Manager
    ----
    OAuth2 token API
]

rectangle EntryManager #$Manager [
    Entry Manager
    ----
    Entry CRUD
]

rectangle ConversionManager #$Manager [
    Conversion Manager
    ----
    Entry conversion
    to EPUB etc.
]

' Engine

rectangle AuthZEngine #$Engine [
    AuthZ Engine
    ----
    AuthZ policy checks
]

rectangle RetrievalEngine #$Engine [
    Retrieval Engine
    ----
    Retrieval of entries
    from the URL
]

rectangle ConversionEngine #$Engine [
    Conversion Engine
    ----
    Conversion of entries
    between formats
]

' Storage

rectangle TokenStorage #$Storage [
    Token Storage
    ----
    Store tokens 
]

rectangle UserInfoStorage #$Storage [
    User Info Storage
    ----
    Store account 
    information 
]

rectangle EntryStorage #$Storage [
    Entry Storage
    ----
    Store entries 
    and files
]

' Data

database UserInfoDB #$Persistence [
    User Info DB
    ----
    SQL-based storage
    for user accounts
]

database TokenDB #$Persistence [
    Token DB
    ----
    SQL-based storage 
    for tokens 
]

collections TokenCache #$Cache [
    Token Cache
    ----
    In-mem storage 
    for tokens
]


database EntriesDB #$Persistence [
    Entry DB
    ----
    SQL-based storage
    for entry data
]

collections EntriesFileCache #$Cache [
    File Cache
    ----
    Storage for caching
    converted files
]

' Connections
User -> KOReader
KOReader --> HTTPAPI
User --> WebUI
User -> WallabagAndroid
WallabagAndroid --> HTTPAPI
' API
WebUI -> HTTPAPI

HTTPAPI --> AuthNMiddleware
HTTPAPI ---> OAuth2Manager
HTTPAPI ---> AdminManager
HTTPAPI ---> ConversionManager
HTTPAPI ---> EntryManager

' Middleware
AuthNMiddleware ----> TokenStorage
AuthNMiddleware ----> UserInfoStorage

' Managers
EntryManager --> RetrievalEngine
EntryManager --> AuthZEngine
EntryManager ---> EntryStorage

OAuth2Manager ---> TokenStorage
OAuth2Manager ---> UserInfoStorage

AdminManager --> AuthZEngine
AdminManager ---> UserInfoStorage

ConversionManager --> ConversionEngine
ConversionManager --> AuthZEngine
ConversionManager ---> EntryStorage

' Engines
AuthZEngine --> UserInfoStorage

' Storage
EntryStorage --> EntriesFileCache
EntryStorage --> EntriesDB

UserInfoStorage --> UserInfoDB

TokenStorage --> TokenDB
TokenStorage --> TokenCache
@enduml
