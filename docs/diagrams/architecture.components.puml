@startuml architecture-components

title Wallabago Components
header component diagram

' Styles
!$Manager = "back:0a2239;text:LightGrey;line:white;line.dotted"
!$Engine = "back:53a2be;text:Black"
!$Storage = "back:1d84b5;text:Black"
!$Persistence = "back:132e32;text:White;line:White"
!$Cache = "back:176087;text:White;line:White"
!$Middleware = "back:105080;text:White;line:White"
!$API = "back:176087;text:White;line:White"

' Clients
actor User [
    User
]

component KOReader [
    KOReader
    ....
    Kindle App
]

component WallabagAndroid [
    Wallabag
    ....
    Android App
]

component Wallabago {
    ' API
    rectangle HTTPAPI #$API [
        Wallabago HTTP API
        ----
        HTTP handlers
    ]

    rectangle WebUI #$API [
        Wallabago Web UI
        ----
        HTMX Web App
    ]

    ' Middleware
    process AuthNMiddleware #$Middleware [
        AuthN Middleware
        ----
        Authentication checks for
        protected resources
        ....
        Used before
        every protected Manager
    ]

    ' Managers
    rectangle AdminManager #$Manager [
        Admin Manager
        ----
        User Management
    ]


    rectangle EntryManager #$Manager [
        Entry Manager
        ----
        Entry CRUD
    ]

    rectangle ConversionManager #$Manager [
        Conversion Manager
        ----
        Entry conversion
        to EPUB etc.
    ]

    ' Engine

    rectangle AuthZEngine #$Engine [
        AuthZ Engine
        ----
        AuthZ policy checks
    ]

    rectangle RetrievalEngine #$Engine [
        Retrieval Engine
        ----
        Retrieval of entries
        from the URL
    ]

    rectangle ConversionEngine #$Engine [
        Conversion Engine
        ----
        Conversion of entries
        between formats
    ]

    ' Storage


    rectangle UserStorage #$Storage [
        User Storage
        ----
        Store account 
        information 
    ]

    rectangle EntryStorage #$Storage [
        Entry Storage
        ----
        Store entries 
        and files
    ]

    ' Data

    database AppDatabase #$Persistence {
        collections Users [
            Users
            ----
            Admin status,
            preferences etc.
        ]

        collections Entries [
            Entries
            ----
            SQL-based storage
            for entry data
        ]
    }
    component IdentityProvider {
        rectangle IdentityManager #$Manager [
            Identity Manager
            ----
            Handles Authentication
            ....
            Provides claims
            about authenticated user
            [UserId, Email]
        ]

        rectangle TokenStorage #$Storage [
            Token Storage
            ----
            Store tokens 
        ]

        rectangle UserInfoStorage #$Storage [
            User Info Storage
            ----
            Store identity information
        ]
        database IdentityDatabase #$Persistence {
            collections UserInfo [
                User Info
                ----
                SQL-based storage
                for user accounts
                ....
                [UserID, Email, Passwords]
            ]

            collections Tokens  [
                Tokens
                ----
                SQL-based storage 
                for tokens 
            ]
        }
    }
}


' Connections
User -> KOReader
KOReader --> HTTPAPI
User --> WebUI
User -> WallabagAndroid
WallabagAndroid --> HTTPAPI
' API
WebUI -> HTTPAPI

HTTPAPI --> AuthNMiddleware
HTTPAPI ---> IdentityManager
HTTPAPI ---> AdminManager
HTTPAPI ---> ConversionManager
HTTPAPI ---> EntryManager

' Middleware
AuthNMiddleware --> IdentityManager

' Managers
EntryManager --> RetrievalEngine
EntryManager --> AuthZEngine
EntryManager ---> EntryStorage

AdminManager --> AuthZEngine
AdminManager ---> UserStorage

ConversionManager --> ConversionEngine
ConversionManager --> AuthZEngine
ConversionManager ---> EntryStorage

' Engines
AuthZEngine --> UserStorage

' Storage
EntryStorage --> Entries

UserStorage --> Users

TokenStorage --> Tokens

' IdentityManager
IdentityManager ---> TokenStorage
IdentityManager ---> UserInfoStorage
UserInfoStorage --> UserInfo
@enduml
